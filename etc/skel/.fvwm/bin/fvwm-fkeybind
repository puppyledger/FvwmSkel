#! /Skel/bin/perl

# note that Fvwm and bash are both evil about escaping characters. 
# Do not expect to be able to use this for any kind of nested command 
# structure. Whatever you need to do, put it inside your script, and 
# call the script simply, without any kind of escaping. 

# -c <set the default command>
# -f <set the default default fkey>
# -s silent (just do it, don't popup a window) # for $HOME/.usersetup if so inclined

use Tk ; 
use X11::Xlib ; 
use Getopt::Std ;

my %OPTS ;
getopts('c:f:s', \%OPTS) ; # path ,x string request. 

# Default input strings   
$OPTS{'f'} = "F12" unless $OPTS{'f'}  =~ /\w+/ ; 
$OPTS{'f'} =~ tr/f/F/ ; 
$OPTS{'c'} = "xmessage \"$OPTS{'f'}\"" unless $OPTS{'c'}  =~ /\w+/ ; 

&doyes if ($OPTS{'s'}) ; # 

# Figure out our geometry
my $display = X11::Xlib->new() ;
my $screenwidth = $display->DisplayWidth() ; 
my $screenheight = $display->DisplayHeight() ; 
my $windowwidth = 400 ; 
my $windowheight = 80 ; 
my $offsetwidth = ($screenwidth - $windowwidth) / 2 ; 
my $offsetheight = ($screenheight - $windowheight) / 2 ; 
my $offsetgeometry = $windowwidth . 'x' . $windowheight . '+' . $offsetwidth . '+' . $offsetheight  ; 

my $onceflag = 1 ; 

# The keys we 0ffer
# my $Fselected = 'F12' ; 
my @Fkeys = qw(F1 F2 F3 F4 F5 F6 F7 F8 F9 F10 F11 F12) ;

# The label we use
my $Elabel = "Key:" ; 

# Construct GUI
my $MW = MainWindow->new() ; # Tk MW 
$MW->geometry($offsetgeometry) ; 
my $WindowID = $MW->wrapper->[0] ; 

my $F1 = $MW->Frame()->pack(-side => 'top', -anchor => 'n', -expand => '1', -fill => 'x') ; 
my $F2 = $MW->Frame()->pack(-side => 'top', -anchor => 'n', -expand => '1', -fill => 'x') ; 
my $F3 = $MW->Frame()->pack(-side => 'top', -anchor => 'n', -expand => '1', -fill => 'x') ; 
my $M1 = $F1->Optionmenu(-variable => \$OPTS{'f'}, -options => [@Fkeys], -command => \&passfocus)->pack(-side => "right", -anchor => "n") ; 
my $L1 = $F1->Label(-justify => 'right', -text => $Elabel)->pack(-side => "left", -anchor => "n", -expand => '1', -fill => 'x'); 
my $E1 = $F2->Entry(-textvariable => \$OPTS{'c'})->pack(-side => "bottom", -anchor => "s", -expand => '1', -fill => 'x');  
my $B1 = $F3->Button(-text => 'OK', -command => \&doyes)->pack(-side => "right", -anchor => "s") ; 
my $B2 = $F3->Button(-text => 'Cancel', -command => \&dono)->pack(-side => "right", -anchor => "s") ; 

$E1->bind('<Return>' => \&focus2ok) ; 
$MW->bind('<KeyRelease-Escape>' => \&dono); 

&warp2me if $onceflag ; 
$M1->focus() if $onceflag  ; 
$onceflag = 0 if $onceflag ; 

MainLoop;

sub passfocus {
	$E1->focus() ;
	$E1->selectionFrom(0) ;
	$E1->selectionTo(length($OPTS{'c'})) ;
}

sub focus2ok {
	$B1->focus() ; 
}

sub dono {
	$B2->focus() ; 
	exit ; 
}

sub doyes {
	my $block = 'FvwmCommand '. "\'" . 'Key ' . $OPTS{'f'} . ' A A Exec '  . $OPTS{'c'} . "\'"  ; 
	system($block) ; 
	exit ; 
}

sub warp2me {
	my $warpblock = 'FvwmCommand \'WindowID ' . $WindowID . ' WarpToWindow 50 50\'' ; 
	system ($warpblock) ; 
}
