#! /bin/perl 

# \#
my $VERSION = '2018-04-10.04-42-43.EDT';

#: change the name of a perl package

use Cwd;

my $fn      = shift @ARGV;
my $newpack = shift @ARGV;
chomp $fn;
chomp $newpack;

die('usage: chpack <filename> <newpackagename>') unless $newpack =~ /\w+/;
die('usage: chpack <filename> <newpackagename>') unless $fn =~ /\w+/;
die("file is a directory: $fn") if ( -d $fn );

my $path = getcwd();
$path =~ s/\/$//g;    # get rid of trailing slash if one
$path =~ s/$/\//;     # put one back
$fn =~ s/^/$path/;    # prepend the path

open( FN, $fn );
my $line = readline(FN) || die( "$fn", '... file not found.' );
close(FN);
chomp $line;
die('not a package?') unless $line =~ /package/;
$line =~ s/^\s*package\s*//;
$line =~ s/\#.*$//;    # remove comments
$line =~ s/\;.*//g;    #  remove all but the package name
$line =~ s/\s+//g;     #

my $oldpack = $line;   # The existing package:

print "changing $oldpack to $newpack" . ' [Y/n]';
my $yn = <STDIN>;
die("aborting") if $yn =~ /n/i;
print "\n";

# FILE SWAP
my $r = rand();
$r =~ s/\D//g;

my $newfn = $fn . $r;

open( OLD, "< $fn" )    || die("can't read file");
open( NEW, "> $newfn" ) || die("can't write file");

while (<OLD>) {
   $_ =~ s/$oldpack/$newpack/g;
   print NEW $_;
}

close(OLD);
close(NEW);

rename( $fn,    "$fn.orig" );
rename( $newfn, $fn );

