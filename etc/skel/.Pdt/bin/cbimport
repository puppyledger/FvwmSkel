#! /usr/bin/perl

# \#
my $VERSION = '2018-04-10.04-40-47.EDT';

# Program generates boot time prepare statements
# for query classes.

use Sort::Naturally qw(nsort);

# get the target class on the CLI

my $editclass = shift(@ARGV);
chomp $editclass;

# get it from the environment if none is on the CLI (allows inline usage in vi)

$editclass = $ENV{'LASTEDITCLASS'} unless length($editclass);

# define a localized method name
my $importmethod = $editclass;
$importmethod =~ s/^.*\:\://;
$importmethod =~ tr/A-Z/a-z/;
$importmethod = 'import' . $importmethod;

my @mapstatement;

open( MLIST, "methmod $editclass |" );

while (<MLIST>) {
   next if $_ =~ /^new/;         # ignore constructors
   next if $_ =~ /^cb/;          # specific to the CB class. cb's are API exports.
   next if $_ =~ /^callback/;    # same as above
   next if $_ =~ /^do/;          # do's are local
   next if $_ =~ /^_/;           # _'s are private
   chomp;

   $foo = "\t\$self->\{\'cbmap\'\}\-\>\{\'" . $_ . "\'\} \= " . 'sub { shift ; return $self->' . $_ . '(@_) ; } ;';

   push @mapstatement, $foo;
}

close(MLIST);

@mapstatement = nsort(@mapstatement);
my $bar = join "\n", @mapstatement;

print "sub $importmethod { \# autogenerated with ", ':r ! ', "cbimport\n\tmy \$self = shift \;\n";
print $bar ;
print "\n\treturn 1;\n}\n\n";

