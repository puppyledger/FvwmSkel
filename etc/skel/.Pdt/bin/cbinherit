#! /usr/bin/perl

my $VERSION = '2018-04-10.04-41-03.EDT';

# Program generates a callback map function
# from a perl module file named in the ENV
# varalb LASTEDITFILE (which is defined by
# vimod, so if we use vimod, this works.

use Vim::Cbmap;
use Sort::Naturally qw(nsort);

# get the target class on the CLI

local $SIG{__WARN__} = sub { };

my $execname = $0;
$execname =~ s/^.*\///g;

my $exportmode;
my $editclass = shift(@ARGV);
chomp $editclass;

# the template
my $doc = Vim::Cbmap->new();

# get it from the environment if none is on the CLI (allows inline usage in vi)
$editclass = $ENV{'LASTEDITCLASS'} unless length($editclass);

$mapname = 'cbmap';

my @mapstatement;

open( MLIST, "methmod $editclass |" );

while (<MLIST>) {
   next if $_ =~ /^new/;         # ignore constructors
   next if $_ =~ /^cb/;          # specific to the CB class. cb's are API exports.
   next if $_ =~ /^callback/;    # same as above
   next if $_ =~ /^do/;          # do's are local
   next if $_ =~ /^_/;           # _'s are private
   chomp;

   my $foo = '$self->{\'' . $mapname . '\'}->{\'' . $_ . '\'} = sub { shift ; return $self->' . $_ . '(@_) ; }' . ';';

   push( @mapstatement, $foo );
}

close(MLIST);

@mapstatement = nsort(@mapstatement);
my $bar = join "\n\t", @mapstatement;

$doc->append(
   'execname'     => $execname,
   'mapname'      => $mapname,
   'mapstatement' => $bar
);

print $doc->output();
print "\n";

